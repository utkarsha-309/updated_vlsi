-----PISO CODE -----

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity piso is
    Port ( clk : in STD_LOGIC;
           slow_clk: inOUT STD_LOGIC;
           load : in STD_LOGIC;
           in3 : in STD_LOGIC_VECTOR (3 downto 0);
           out3 : out STD_LOGIC);
end piso;

architecture Behavioral of piso is
signal s3 : STD_LOGIC;
signal temp : STD_LOGIC_VECTOR(3 DOWNTO 0);
signal counter: std_logic_vector(1 downto 0):=(others =>'0');
begin
process(slow_clk,in3,load,s3)
         
	begin
		if(load='1') THEN
			temp(3 DOWNTO 0) <= in3(3 DOWNTO 0);    
			elsif(slow_clk'EVENT and slow_clk='1') THEN			
			temp(3 DOWNTO 1) <= temp(2 DOWNTO 0);	
			s3 <= temp(3);
		end if;
	end process;
	out3 <= s3;
process(clk)
    begin
    if (clk'event and clk='1')then
     counter <=counter+'1';
     end if;
     end process;
    slow_clk <= counter(1);
end Behavioral;


------PISO_TB CODE---- 

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity piso_tb is
--  Port ( );
end piso_tb;

architecture Behavioral of piso_tb is

component piso
   Port ( clk : in  STD_LOGIC;
             slow_clk: inout STD_LOGIC;
           load : in  STD_LOGIC;
           in3 : in  STD_LOGIC_VECTOR (3 downto 0);
           out3 : out  STD_LOGIC);
end component;
signal clk, load, out3,slow_clk: std_logic;
signal in3 : STD_LOGIC_VECTOR (3 downto 0);
begin
u1: piso port map ( clk,slow_clk,load,in3,out3);
process
begin
clk<= '0';
wait for 10 ns;
clk<= '1';
wait for 10 ns ;
end process;
 
Process
begin
load<= '1' ;
in3<= "1100";
wait for 20 ns;
load<= '0';
wait for 500 ns ;
end process;

end Behavioral;
